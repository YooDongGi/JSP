EL, JSTL ==> 표현식, 스크립틀릿을 걷어내기 위함
			==> JSP 파일을 최대한 태그처럼 보이게 하기 위함
				(자바 코드를 걷어낸다)
				
				
JSTL 태그 라이브러리 사용방법 ( 지시자 <%@ %> ) 

1. taglib 지시자를 선언
	<%@ taglib prefix="namespace, 개발자가 편한대로 지정가능, 관습적으로 많이 사용하는 prefix를 보통 따름" 
			uri="사용하려고하는 태그의 식별자" %>


core tag 라이브러리 : c
국제화 태그 라이브러리 : fmt

CORE tag 라이브러리
속성저장
request.setAttribute("속성명", 속성값);
session.setAttribute("속성명", 속성값);


el 사용시 null값 처리를 자동으로 함  ==>  registUser.jsp  ( null 처리 간소화 작업 )


ctrl + h ==> 검색 치환
<%=request.getContextPath() %> ==> ${pageContext.request.contextPath }


${pageContext.}
${param.}
${속성명}

${request...} => 제공하지 않아서 사용할 수 없다!!!!!


JSTL CORE 조건 제어(java if)
if			==>    java의 단일 if
choose		==>	   java의 if, else if, else


JSTL 반복문(for, 향상된 for) **** 많이 사용
forEach
	<실습> - for문
	timesTable.jsp 의 표현식, 스크립틀릿 ==> EL, JSTL로 변경
	
	
	
	<실습> - 향상된 for문
	allUser.jsp 변경
	pagingUser.jsp 변경
	
	


forTokens : 문자열을 지정한 문자로 잘라서 출력
ex]
	<c:forTokens items="${lineRangers}" delims="," var="i">
		${i} <br>
	</c:forTokens>
	
	

JSTL core URL
 - import : 특정 url에서 반환하는 값(html)을 호출하는 곳에 추가하는 기능
 - redirect : 클라이언트에게 다른 url로 재전송 요청 
 - url : url 경로 작성



JSTL core 기타
 - catch
 - out